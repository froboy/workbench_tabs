<?php
/**
 * @file
 * Drupal hooks.
 */

/**
 * Implements hook_theme().
 */
function workbench_tabs_theme() {
  return [
    'workbench_tabs' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Preprocess variables for the workbench tabs template.
 *
 * @ingroup themeable
 */
function template_preprocess_workbench_tabs(&$variables) {
  $element = $variables['element'];

  $variables['messages'] = Drupal::service('renderer')->render($element['messages']);
  $variables['tabs'] = Drupal::service('renderer')->render($element['tabs']);
}

/**
 * Implements hook_page_top().
 */
function workbench_tabs_page_top(array &$page_top) {
  $account = \Drupal::currentUser();
  $is_not_admin_theme = \Drupal::theme()->getActiveTheme()->getName() != \Drupal::config('system.theme')->get('admin');

  // @debug
  drupal_set_message(t('This is a test error.'), 'error');
  drupal_set_message(t('This is a test warning.'), 'warning');
  drupal_set_message(t('This is a test status.'), 'status');

  $page_top['workbench_tabs'] = [
    '#theme' => 'workbench_tabs',
    '#cache' => [
      'contexts' => [
        'url.path',
        'user.roles',
      ],
    ],
    '#attached' => [
      'library' => ['workbench_tabs/workbench_tabs'],
    ],
    '#access' => $is_not_admin_theme && $account->hasPermission('use workbench_tabs'),
  ];

  $page_top['workbench_tabs']['messages'] = [
    '#type' => 'status_messages',
  ];

  $page_top['workbench_tabs']['tabs'] = [
    '#type' => 'workbench_tabs_local_tasks',
  ];
}
